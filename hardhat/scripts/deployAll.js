const hre = require("hardhat");

async function main() {
//  DÃ©ploiement de ValeToken
  const VaultManager = await hre.ethers.getContractFactory("VaultManager");
  const vaultManager = await VaultManager.deploy(usdcAddress);
  await vaultManager.waitForDeployment();
  const vaultManagerAddress = await vaultManager.getAddress();
  console.log("âœ… VaultManager dÃ©ployÃ© Ã  : ${vaultManagerAddress}");

  //  DÃ©ploiement de BorrowerManager
  const BorrowerManager = await hre.ethers.getContractFactory("BorrowerManager");
  const borrowerManager = await BorrowerManager.deploy(valeTokenAddress, usdcAddress, vaultManagerAddress);
  await borrowerManager.waitForDeployment();
  const borrowerManagerAddress = await borrowerManager.getAddress();
  console.log("âœ… BorrowerManager dÃ©ployÃ© Ã  : ${borrowerManagerAddress}");

  // DÃ©ploiement de LendingPool
  const LendingPool = await hre.ethers.getContractFactory("LendingPool");
  const lendingPool = await LendingPool.deploy(usdcAddress, valeTokenAddress, vaultManagerAddress);
  await lendingPool.waitForDeployment();
  const lendingPoolAddress = await lendingPool.getAddress();
  console.log("âœ… LendingPool dÃ©ployÃ© Ã  : ${lendingPoolAddress}");

  // Approve BorrowerManager pour utiliser les tokens USDC depuis VaultManager
  const approveTx = await usdc.approve(borrowerManagerAddress, hre.ethers.parseUnits("1000000", 6)); // 1M USDC
  await approveTx.wait();
  console.log("âœ… VaultManager a approuvÃ© BorrowerManager pour 1M USDC");

  console.log("ðŸš€ Tous les contrats ont Ã©tÃ© dÃ©ployÃ©s avec succÃ¨s !");
}

// Gestion des erreurs
main().catch((error) => {
  console.error(error);
  process.exitCode = 1;
});